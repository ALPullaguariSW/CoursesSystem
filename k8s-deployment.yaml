apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: cursos-service
spec:
  selector:
    app: cursos
  ports:
    - protocol: TCP
      port: 8002
      targetPort: 8002
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: estudiantes-service
spec:
  selector:
    app: estudiantes
  ports:
    - protocol: TCP
      port: 8003
      targetPort: 8003
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "rootpassword"
            - name: MYSQL_DATABASE
              value: "sysdb2025"
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgrespassword"
            - name: POSTGRES_DB
              value: "testdb"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cursos
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cursos
  template:
    metadata:
      labels:
        app: cursos
    spec:
      initContainers:
        - name: wait-for-mysql
          image: busybox
          command: ['sh', '-c', 'until nc -z mysql-service 3306; do echo waiting for mysql; sleep 2; done;']
      containers:
        - name: cursos
          image: axelpullaguari/cursos:latest
          ports:
            - containerPort: 8002
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://mysql-service:3306/sysdb2025"
            - name: SPRING_DATASOURCE_USERNAME
              value: "root"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "rootpassword"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: estudiantes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: estudiantes
  template:
    metadata:
      labels:
        app: estudiantes
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for postgres; sleep 2; done;']
      containers:
        - name: estudiantes
          image: axelpullaguari/estudiantes:latest
          ports:
            - containerPort: 8003
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres-service:5432/testdb"
            - name: SPRING_DATASOURCE_USERNAME
              value: "postgres"
            - name: SPRING_DATASOURCE_PASSWORD
              value: "postgrespassword"
