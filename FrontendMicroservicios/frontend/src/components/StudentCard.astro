---
const { student } = Astro.props;

// Validar la estructura de "student"
const { 
  id = '', 
  nombre = '', 
  apellido = '', 
  email = '', 
  telefono = '', 
  fechaNacimiento = '', 
  creadoEn = '' 
} = student || {};

// Asegurar que se formatean las fechas correctamente
const formattedFechaNacimiento = fechaNacimiento 
  ? new Date(fechaNacimiento).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' }) 
  : 'Fecha de nacimiento no especificada';

const formattedCreadoEn = creadoEn 
  ? new Date(creadoEn).toLocaleString('es-ES', { dateStyle: 'long', timeStyle: 'short' }) 
  : 'Fecha de creación no disponible';
---

<div class="bg-white shadow-md rounded-md p-4 mb-4">
  <h2 class="text-xl font-semibold">{nombre} {apellido}</h2>
  <p class="text-gray-700">Correo: {email}</p>
  <p class="text-gray-700">Teléfono: {telefono}</p>
  <p class="text-gray-700">Fecha de Nacimiento: {formattedFechaNacimiento}</p>
  <p class="text-gray-700">Creado el: {formattedCreadoEn}</p>

  <div class="mt-2">
    <a href={`/estudiantes/editar/${id}`} class="bg-gray-500 hover:bg-yellow-700 text-white font-bold py-2 px-4 rounded ml-2">
      Editar
    </a>
    <form method="POST" action={`/estudiantes/eliminar/${id}`} class="inline-block ml-2">
      <button 
        type="submit"
        class="bg-orange-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded"
        onclick="return confirm('¿Estás seguro de eliminar este estudiante?');">
        Eliminar
      </button>
    </form>
  </div>
</div>
