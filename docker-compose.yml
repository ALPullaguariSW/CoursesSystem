version: "3.8"

services:
  # Frontend (Astro)
  frontend:
    build:
      context: D:/TestCursos/CoursesSystem/FrontendMicroservicios/frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - cursos
      - estudiantes
    networks:
      - app-network

  # Microservicio de Cursos (Spring Boot)
  cursos:
    build:
      context: D:/TestCursos/CoursesSystem/MicroservicioCurso
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/sisdb2025?createDatabaseIfNotExist=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootpassword
    depends_on:
      - mysql-db
    networks:
      - app-network

  # Microservicio de Estudiantes (Spring Boot)
  estudiantes:
    build:
      context: D:/TestCursos/CoursesSystem/MicroservicioEstudiante
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/estudiantesdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      - postgres-db
    networks:
      - app-network

  # Base de datos MySQL
  mysql-db:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: sisdb2025
    networks:
      - app-network
    volumes:
      - mysql_data:/var/lib/mysql # Persistir los datos

  # Base de datos PostgreSQL
  postgres-db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: estudiantesdb
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persistir los datos

# Definir la red
networks:
  app-network:
    driver: bridge

# Definir los vol√∫menes para persistir los datos de las bases de datos
volumes:
  mysql_data:
  postgres_data: